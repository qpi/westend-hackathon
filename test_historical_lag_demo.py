"""
üéØ DEMO: Val√≥di Historikus Lag √ârt√©kek Tesztel√©se
===============================================

Ez a script bemutatja, hogyan m≈±k√∂dik az √∫j funkci√≥:
val√≥di historikus adatokb√≥l sz√°m√≠tott lag √©rt√©kek.
"""

import pandas as pd
import sys
sys.path.insert(0, 'src')
from data_preparation import DataPreparation

# Adatok bet√∂lt√©se
print("üéØ VAL√ìDI HISTORIKUS LAG √âRT√âKEK DEMO")
print("=" * 60)

try:
    # Adatok bet√∂lt√©se
    data_prep = DataPreparation()
    df = data_prep.load_and_clean_data('data/hackathon_data.csv')
    df = data_prep.create_features(df)

    print(f"‚úÖ Adatok bet√∂ltve: {len(df)} sor")
    print(f"   Id≈ëszak: {df['datum'].min()} - {df['datum'].max()}")

    # P√©lda d√°tum: 2024. janu√°r 1-je
    test_date = pd.Timestamp('2024-01-01')
    print(f"\nüìÖ Teszt d√°tum: {test_date.strftime('%Y-%m-%d')}")

    # El≈ëz≈ë napi √©rt√©k keres√©se
    prev_date = test_date - pd.Timedelta(days=1)
    print(f"üìä El≈ëz≈ë nap: {prev_date.strftime('%Y-%m-%d')}")

    prev_day_data = df[df['datum'] == prev_date]
    if not prev_day_data.empty:
        prev_visitors = prev_day_data['latogatoszam'].values[0]
        prev_temp = prev_day_data['atlaghomerseklet'].values[0]
        print(f"   ‚úÖ Tal√°lt adat: {prev_visitors:.0f} f≈ë, {prev_temp:.1f}¬∞C")
    else:
        print("   ‚ö†Ô∏è Nincs adat az el≈ëz≈ë napra")

    # 7 napos √°tlag sz√°m√≠t√°sa
    week_start = test_date - pd.Timedelta(days=7)
    week_data = df[
        (df['datum'] >= week_start) &
        (df['datum'] < test_date)
    ]

    print(f"üìà 7 napos id≈ëszak: {week_start.strftime('%Y-%m-%d')} - {(test_date - pd.Timedelta(days=1)).strftime('%Y-%m-%d')}")
    print(f"   Adatok sz√°ma: {len(week_data)} nap")

    if len(week_data) > 0:
        week_avg_visitors = week_data['latogatoszam'].mean()
        week_avg_temp = week_data['atlaghomerseklet'].mean()
        print(f"   ‚úÖ 7 napos √°tlag: {week_avg_visitors:.0f} f≈ë, {week_avg_temp:.1f}¬∞C")

        # Egy√©ni napok megjelen√≠t√©se
        print("   üìã Napi bont√°s:")
        for _, row in week_data.iterrows():
            print(f"      {row['datum'].strftime('%Y-%m-%d')}: {row['latogatoszam']:.0f} f≈ë")
    else:
        print("   ‚ö†Ô∏è Nincs adat a 7 napos id≈ëszakban")

    print("\n" + "=" * 60)
    print("üéâ DEMO √ñSSZEFOGLAL√ì")
    print("=" * 60)

    if not prev_day_data.empty and len(week_data) > 0:
        print("‚úÖ SIKERES IMPLEMENT√ÅCI√ì!")
        print(f"   - El≈ëz≈ë napi √©rt√©k: {prev_visitors:.0f} f≈ë (nem 10,974!)")
        print(f"   - 7 napos √°tlag: {week_avg_visitors:.0f} f≈ë (nem 10,974!)")
        print("   - Dinamikus, val√≥di adatok alapj√°n!")
    else:
        print("‚ö†Ô∏è NEM TELJES AZ ADAT")
        print("   - Hi√°nyz√≥ adatok miatt √°tlagokat haszn√°lunk")

    print("\nüìã M≈∞K√ñD√âS:")
    print("   1. Minden predikci√≥kor ki keresi a val√≥di el≈ëz≈ë napi √©rt√©keket")
    print("   2. Sz√°m√≠tja a val√≥di 7 napos √°tlagokat")
    print("   3. Ezeket haszn√°lja a modell bemenetek√©nt")
    print("   4. √çgy sokkal realisztikusabb eredm√©nyeket kapunk!")

except Exception as e:
    print(f"‚ùå Hiba: {str(e)}")
    print("Ellen≈ërizd, hogy l√©tezik-e a data/hackathon_data.csv f√°jl!")

print("\n" + "=" * 60)
print("üöÄ PR√ìB√ÅLD KI: streamlit run web_app/streamlit_app.py")
print("=" * 60)
